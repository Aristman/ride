"""
–ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ MCP —Å–µ—Ä–≤–µ—Ä —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã.
"""

import sys
import time
from pathlib import Path
from typing import Optional

import click
import uvicorn

from .config import ServerConfig, load_config, get_default_config_path
from .api import create_app, run_server
from . import __version__


@click.group()
@click.version_option(version=__version__)
def cli():
    """Ride Filesystem MCP Server - MCP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ."""
    pass


@cli.command()
@click.option('--host', default='127.0.0.1', help='–•–æ—Å—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞')
@click.option('--port', default=3001, type=int, help='–ü–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞')
@click.option('--config', type=click.Path(exists=True), help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏')
@click.option('--base-dir', type=click.Path(), help='–ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π')
@click.option('--log-level', default='info', help='–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (debug, info, warning, error)')
@click.option('--max-file-size', type=int, help='–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö')
@click.option('--allowed-extensions', help='–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é')
@click.option('--enable-watch', is_flag=True, help='–í–∫–ª—é—á–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤')
def serve(
    host: str,
    port: int,
    config: Optional[str],
    base_dir: Optional[str],
    log_level: str,
    max_file_size: Optional[int],
    allowed_extensions: Optional[str],
    enable_watch: bool
):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å MCP —Å–µ—Ä–≤–µ—Ä."""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_path = config or get_default_config_path()
        server_config = load_config(config_path)

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        if base_dir:
            server_config.base_dir = base_dir
        if max_file_size:
            server_config.max_file_size = max_file_size
        if allowed_extensions:
            server_config.allowed_extensions = [ext.strip() for ext in allowed_extensions.split(',')]
        if enable_watch:
            server_config.enable_file_watch = enable_watch

        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ
        click.echo(f"üöÄ –ó–∞–ø—É—Å–∫ Ride Filesystem MCP Server v{__version__}")
        click.echo(f"üìÅ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {server_config.base_dir}")
        click.echo(f"üåê –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://{host}:{port}")
        click.echo(f"üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://{host}:{port}/docs")
        click.echo(f"üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –≤–∫–ª—é—á–µ–Ω–∞")
        click.echo(f"üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤: {'–≤–∫–ª—é—á–µ–Ω–æ' if server_config.enable_file_watch else '–≤—ã–∫–ª—é—á–µ–Ω–æ'}")

        if server_config.allowed_extensions:
            click.echo(f"üìÑ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: {', '.join(server_config.allowed_extensions)}")

        click.echo("-" * 50)

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        run_server(
            host=host,
            port=port,
            config_file=config_path,
            log_level=log_level
        )

    except KeyboardInterrupt:
        click.echo("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        click.echo(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}", err=True)
        sys.exit(1)


@cli.command()
@click.option('--config', type=click.Path(exists=True), help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏')
def init(config: Optional[str]):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."""
    try:
        config_path = config or get_default_config_path()

        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥–∞
        Path(config_path).parent.mkdir(parents=True, exist_ok=True)

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        server_config = ServerConfig()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ TOML
        import toml
        config_data = {
            "server": server_config.dict(exclude_none=True)
        }

        with open(config_path, 'w', encoding='utf-8') as f:
            toml.dump(config_data, f)

        click.echo(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: {config_path}")
        click.echo(f"üìÅ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {server_config.base_dir}")
        click.echo(f"üîß –ü–æ—Ä—Ç: {server_config.port}")
        click.echo(f"üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {server_config.max_file_size} –±–∞–π—Ç")

    except Exception as e:
        click.echo(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}", err=True)
        sys.exit(1)


@cli.command()
@click.option('--config', type=click.Path(exists=True), help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏')
def status(config: Optional[str]):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∏ —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é."""
    try:
        config_path = config or get_default_config_path()
        server_config = load_config(config_path)

        click.echo(f"üìä Ride Filesystem MCP Server v{__version__}")
        click.echo("-" * 40)
        click.echo(f"üìÅ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {server_config.base_dir}")
        click.echo(f"üåê –•–æ—Å—Ç: {server_config.host}")
        click.echo(f"üîå –ü–æ—Ä—Ç: {server_config.port}")
        click.echo(f"üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {server_config.max_file_size:,} –±–∞–π—Ç")
        click.echo(f"üìö –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {server_config.log_level}")
        click.echo(f"üîç –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤: {'–≤–∫–ª—é—á–µ–Ω–æ' if server_config.enable_file_watch else '–≤—ã–∫–ª—é—á–µ–Ω–æ'}")

        if server_config.allowed_extensions:
            click.echo(f"üìÑ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: {', '.join(server_config.allowed_extensions)}")
        else:
            click.echo("üìÑ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: –≤—Å–µ")

        click.echo(f"üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É—Ç–µ–π: {len(server_config.blocked_paths)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–∞–∑–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        base_path = Path(server_config.base_dir)
        if base_path.exists() and base_path.is_dir():
            click.echo(f"‚úÖ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
            try:
                # –°—á–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã
                file_count = len(list(base_path.rglob('*')))
                click.echo(f"üìÅ –§–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {file_count}")
            except Exception:
                click.echo(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª—ã")
        else:
            click.echo(f"‚ùå –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

    except Exception as e:
        click.echo(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}", err=True)
        sys.exit(1)


@cli.command()
@click.option('--config', type=click.Path(exists=True), help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏')
def validate(config: Optional[str]):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å."""
    try:
        config_path = config or get_default_config_path()
        server_config = load_config(config_path)

        errors = []

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        base_path = Path(server_config.base_dir)
        if not base_path.exists():
            try:
                base_path.mkdir(parents=True, exist_ok=True)
                click.echo("‚úÖ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞")
            except Exception as e:
                errors.append(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {e}")
        elif not base_path.is_dir():
            errors.append(f"–ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π: {server_config.base_dir}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
        if not (1 <= server_config.port <= 65535):
            errors.append(f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ—Ä—Ç: {server_config.port}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        for ext in server_config.allowed_extensions:
            if not ext.replace('.', '').isalnum():
                errors.append(f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: {ext}")

        if errors:
            click.echo("‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
            for error in errors:
                click.echo(f"  - {error}")
            sys.exit(1)
        else:
            click.echo("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞")

    except Exception as e:
        click.echo(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}", err=True)
        sys.exit(1)


@cli.command()
@click.option('--config', type=click.Path(exists=True), help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏')
def test_connection(config: Optional[str]):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É."""
    try:
        import httpx

        config_path = config or get_default_config_path()
        server_config = load_config(config_path)

        server_url = f"http://{server_config.host}:{server_config.port}"

        with httpx.Client(timeout=5.0) as client:
            response = client.get(f"{server_url}/health")

        if response.status_code == 200:
            data = response.json()
            click.echo("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
            click.echo(f"üìä –í–µ—Ä—Å–∏—è: {data.get('version', 'unknown')}")
            click.echo(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {data.get('uptime_seconds', 0):.1f} —Å–µ–∫")
            click.echo(f"üìÅ –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {data.get('base_dir', 'unknown')}")
        else:
            click.echo(f"‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status_code}")

    except httpx.ConnectError:
        click.echo("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        click.echo(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}", err=True)


if __name__ == "__main__":
    cli()